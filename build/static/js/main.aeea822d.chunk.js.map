{"version":3,"sources":["scenes/PreloadScene.js","config.js","store/actionTypes.js","store/index.js","store/actions.js","store/reducer.js","gameObjects/GameObject.js","helpers/index.js","gameObjects/Hero.js","gameObjects/Dice.js","scenes/InitScene.js","game/index.js","components/PlayingBar/PlayingBar.js","components/Info/Info.js","components/Rules/Rules.js","App.js","index.js","assets/board.jpg","assets/dice.png","assets/hero.png","assets/hero2.png"],"names":["PreloadScene","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","key","_this","load","image","board","spritesheet","dice","frameWidth","frameHeight","hero2","hero","setTimeout","scene","start","phaser","Scene","src_config","boardWidth","boardHeight","pausingFrames","20","25","48","52","56","60","64","68","72","76","96","112","laddersPositions","2","position","offsetX","offsetY","4","9","33","80","snakePositions","98","92","62","51","ROLL_DICE","STOP_DICE","SET_DICE","ADD_PLAYER","SET_PLAYER_PROPS","state","BehaviorSubject","diceState","players","playingPlayer","prevState","store","dispatch","next","bind","rollDice","action","setPlayerProps","name","props","payload","addPlayer","subscribe","_ref","player","objectSpread","rolls","defineProperty","reducer","value","window","GameObject","x","y","frameIndex","config","sprite","init","stateDidUpdate","_gameObject","on","onAnimationComplete","arguments","length","undefined","add","Error","cfg","frameRate","repeat","duration","anims","create","movement","Promise","resolve","onComplete","apply","t","tween","targets","destroy","sleep","asyncToGenerator","regenerator_default","a","mark","_callee","time","wrap","_context","prev","abrupt","stop","_x","Hero","_getPrototypeOf2","_len","args","Array","_key","concat","scaleX","scaleY","createHeroAnimations","moveHero","setHeroPosition","frames","generateFrameNumbers","createAnimation","slice","pos","isInAnyRange","ranges","some","range","inRange","toConsumableArray","includes","currentPosition","getHeroPosition","prevPosition","isOnLadders","isOnSnakes","stopAnimations","end","moveAsync","keys","map","p","parseInt","i","current","move","shouldMoveForward","play","moveForward","shouldMoveUp","moveUp","shouldMoveBackwards","moveBackwards","newPosition","Dice","_gameObjectAnim","animate","filter","fr","frame","shuffle","_this2","getFrames","pausingFramesIndexes","f","Math","floor","random","setFrame","InitScene","staticBg","defaultConfig","width","height","PlayingBar","setState","getPlayerName","react_default","createElement","className","toLowerCase","disabled","onClick","Component","Info","playerContainer","classNames","playing-player","Rules","href","target","App","parent","el","Game","Rules_Rules_Rules","Info_Info_Info","ref","components_PlayingBar_PlayingBar","ReactDOM","render","App_App","document","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.aeea822d.chunk.js","sourcesContent":["import phaser from 'phaser';\nimport board from '../assets/board.jpg';\nimport dice from '../assets/dice.png';\nimport hero from '../assets/hero.png';\nimport hero2 from '../assets/hero2.png';\n\n\nexport default class PreloadScene extends phaser.Scene {\n    constructor () {\n        super({\n            key: 'preloader'\n        })\n    }\n\n    preload () {\n      this.load.image('board', board);\n      this.load.spritesheet('dice', dice, { frameWidth: 46, frameHeight: 46 });\n      this.load.spritesheet('player2', hero2, { frameWidth: 128, frameHeight: 128 });\n      this.load.spritesheet('player1', hero, { frameWidth: 128, frameHeight: 128 });\n\n      setTimeout(() => {\n        this.scene.start('initscene')\n      }, 1000);\n    }\n}\n","export default {\n  boardWidth: 560,\n  boardHeight: 560,\n  pausingFrames: {\n    20: 4,\n    25: 4,\n    48: 1,\n    52: 2,\n    56: 6,\n    60: 5,\n    64: 1,\n    68: 2,\n    72: 6,\n    76: 5,\n    96: 3,\n    112: 3,\n  },\n  laddersPositions: {\n    2: {\n      position: 38,\n      offsetX: 50,\n      offsetY: -150, \n    },\n    4: {\n      position: 14,\n      offsetX: 150,\n      offsetY: -50, \n    },\n    9: {\n      position: 31,\n      offsetX: 50,\n      offsetY: -150, \n    },\n    33: {\n      position: 85,\n      offsetX: -150,\n      offsetY: -250, \n    },\n    52: {\n      position: 88,\n      offsetX: -50,\n      offsetY: -150, \n    },\n    80: {\n      position: 99,\n      offsetX: 50,\n      offsetY: -100, \n    },\n  },\n  snakePositions: {\n    98: {\n      position: 8,\n      offsetX: 250,\n      offsetY: 450, \n    },\n    92:{\n      position: 53,\n      offsetX: -50,\n      offsetY: 200, \n    },\n    62: {\n      position: 57,\n      offsetX: 100,\n      offsetY: 50, \n    },\n    56: {\n      position: 15,\n      offsetX: 50,\n      offsetY: 200, \n    },\n    51: {\n      position: 11,\n      offsetX: 0,\n      offsetY: 200, \n    },\n  }\n}\n","export const ROLL_DICE = 'ROLL_DICE';\nexport const STOP_DICE = 'STOP_DICE';\nexport const SET_DICE = 'SET_DICE';\n\n\nexport const ADD_PLAYER = 'ADD_PLAYER';\nexport const SET_PLAYER_PROPS = 'SET_PLAYER_PROPS';","import { BehaviorSubject } from 'rxjs';\nimport reducer from './reducer';\n\nconst initialState = {\n  dice: -1,\n  diceState: 'hidden',\n  players: {},\n  playingPlayer: 'player1'\n};\n\nconst action = '';\n\nexport const state = new BehaviorSubject({ state: initialState, prevState: {} });\n\nconst store = new BehaviorSubject(action);\nexport const dispatch = store.next.bind(store);\n\nstore.subscribe({\n  next: ({action, payload}) => {\n    state.next({\n      state: reducer(state.value.state, action, payload),\n      prevState: state.value.state,\n    });\n    window.state = state.value.state;\n  }\n})\n","import { dispatch } from \"../store\";\nimport {\n  ROLL_DICE,\n  STOP_DICE,\n  SET_DICE,\n  SET_PLAYER_PROPS,\n  ADD_PLAYER\n} from \"./actionTypes\";\n\nexport function rollDice() {\n  dispatch({\n    action: ROLL_DICE\n  });\n}\n\nexport function stopDice() {\n  dispatch({\n    action: STOP_DICE\n  });\n}\n\nexport function setDice(payload) {\n  dispatch({\n    action: SET_DICE,\n    payload\n  });\n}\n\nexport function setPlayerProps(name, props) {\n  dispatch({\n    action: SET_PLAYER_PROPS,\n    payload: {\n      name,\n      props,\n    }\n  });\n}\n\nexport function addPlayer(payload) {\n  dispatch({\n    action: ADD_PLAYER,\n    payload\n  });\n}\n","import {\n  ROLL_DICE,\n  STOP_DICE,\n  SET_DICE,\n  SET_PLAYER_PROPS,\n  ADD_PLAYER\n} from \"./actionTypes\";\n\nexport default (prevState, action, payload) => {\n  switch (action) {\n    case ROLL_DICE: {\n      const player = prevState.playingPlayer;\n      const players = { ...prevState.players };\n      players[player] = {\n        ...players[player],\n        rolls: 1 + prevState.players[player].rolls\n      };\n\n      return {\n        ...prevState,\n        diceState: \"rolling\",\n        players\n      };\n    }\n\n    case STOP_DICE:\n      return {\n        ...prevState,\n        diceState: \"pause\"\n      };\n\n    case SET_DICE: {\n      const player = prevState.playingPlayer;\n      const players = { ...prevState.players };\n      players[player] = {\n        ...players[player],\n        position: payload + prevState.players[player].position\n      };\n\n      let playingPlayer;\n\n      if(payload === 6){\n        playingPlayer = player;\n      } else {\n        playingPlayer = player === 'player1' ? 'player2' : 'player1';\n      }\n\n      return {\n        ...prevState,\n        playingPlayer,\n        dice: payload,\n        players\n      };\n    }\n\n    case SET_PLAYER_PROPS:\n      const players = { ...prevState.players };\n      players[payload.name] = {\n        ...players[payload.name],\n        ...payload.props\n      };\n\n      return {\n        ...prevState,\n        players\n      };\n\n    case ADD_PLAYER: {\n      return {\n        ...prevState,\n        players: {\n          ...prevState.players,\n          [payload]: {\n            position: 1,\n            rolls: 0\n          }\n        }\n      };\n    }\n\n    default:\n      return prevState;\n  }\n};\n","import { state } from '../store';\nimport config from '../config';\n\n/**\n * Base Class that every game object should inherit\n *\n * @export\n * @class GameObject\n */\nexport default class GameObject {\n  constructor(scene, x, y, name, frameIndex) {\n    this.scene = scene;\n    this.state = state;\n    this.config = config;\n    this.name = name;\n    this.sprite = name;\n    this.init(x, y, name, frameIndex);\n\n    this.stateDidUpdate = this.stateDidUpdate.bind(this);\n    this.state.subscribe({ next: this.stateDidUpdate });\n    this._gameObject.on('animationcomplete', this.onAnimationComplete)\n  }\n\n  /**\n   * Creates the gameobject\n   *\n   * @param {number} [x=50]\n   * @param {number} [y=50]\n   * @returns\n   * @memberof Dice\n   */\n  init(x = 50, y = 50, name = 'gameobject', frameIndex = 0) {\n    this._gameObject = this.scene.add.sprite(x, y, name, frameIndex);\n  }\n\n  /**\n   * Called whenever the state of the game is updated\n   *\n   * @memberof GameObject\n   */\n  stateDidUpdate(){\n    throw new Error('Gameobject should implement this function');\n  }\n\n  onAnimationComplete(){\n    // console.info('Can be implemented by dirived classes')\n  }\n\n  /**\n   * Create an animation\n   *\n   * @param {object} [config={ key, frames, frameRate = 10 }]\n   * @returns {Animation}\n   * @memberof GameObject\n   */\n  createAnimation(config){\n    const cfg = {\n      frameRate: 10,\n      repeat: -1,\n      ...config,\n    };\n\n    if(cfg.duration) {\n      delete cfg.frameRate;\n      delete cfg.repeat;\n    }\n\n    return this.scene.anims.create(cfg);\n  }\n\n  /**\n   * Moves the gameobject\n   *\n   * @param {object} movement\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveAsync(movement, duration) {\n    return new Promise(resolve => {\n      const onComplete = movement.onComplete ? (...args) => {\n        movement.onComplete(...args);\n        resolve();\n      } : resolve;\n\n      this.t = this.scene.add.tween({\n        targets: this._gameObject,\n        onComplete,\n        duration: duration || 500,\n        ...movement\n      });\n    });\n  }\n\n  /**\n   * Clear sprite\n   * \n   * @memberof Gameobject\n   */\n  destroy() {\n    if (this._gameObject) this._gameObject.destroy();\n  }\n}\n","export const sleep = async function(time){\n    return new Promise(resolve => {\n        setTimeout(() => resolve(), time);\n    });\n};","import GameObject from \"./GameObject\";\nimport inRange from \"lodash/inRange\";\nimport { sleep } from \"../helpers\";\nimport { setPlayerProps } from \"../store/actions\";\n\nwindow.setPlayerProps = setPlayerProps; // temporary for debuggin\n\n/**\n * Player Character\n *\n * @export\n * @class Hero\n * @extends {GameObject}\n */\nexport default class Hero extends GameObject {\n  constructor(...args) {\n    super(...args);\n    this._gameObject.scaleX = 0.7;\n    this._gameObject.scaleY = 0.7;\n    this.createHeroAnimations();\n    window.moveHero = this.hero;\n  }\n\n  /**\n   * Called whenever the store is upaded\n   *\n   * @param {object} { state, prevState }\n   * @returns\n   * @memberof Hero\n   */\n  stateDidUpdate({ state, prevState }) {\n    if (prevState.playingPlayer !== this.name) return;\n\n    if (this._gameObject) {\n      this.setHeroPosition(state, prevState);\n    }\n  }\n\n  /**\n   * Returns the character position in the board\n   *\n   * @param {object} state\n   * @returns {number}\n   * @memberof Hero\n   */\n  getHeroPosition(state) {\n    const player = state.players[this.name];\n    return player ? state.players[this.name].position : 1;\n  }\n\n  /**\n   * Create and load the various animations for the Hero\n   *\n   * @memberof Hero\n   */\n  createHeroAnimations() {\n    const frames = this.scene.anims.generateFrameNumbers(this.sprite);\n    this.createAnimation({\n      key: `${this.name}walkBackwards`,\n      frames: frames.slice(0, 4),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkBackwards`);\n    this.createAnimation({\n      key: `${this.name}walkUp`,\n      frames: frames.slice(12, 16),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkUp`);\n    this.createAnimation({\n      key: `${this.name}walkForward`,\n      frames: frames.slice(4, 8),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkForward`);\n  }\n\n  /**\n   * Stop animations\n   *\n   * @memberof Hero\n   */\n  stopAnimations() {\n    this._gameObject.anims.stop(`${this.name}walkForward`);\n    this._gameObject.anims.stop(`${this.name}walkBackwards`);\n    this._gameObject.anims.stop(`${this.name}walkUp`);\n  }\n\n  /**\n   * Determines if the Hero can be moved forward\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveForward(pos) {\n    const ranges = [[1, 10], [21, 30], [41, 50], [61, 70], [81, 90]];\n    return this.isInAnyRange(pos, ranges);\n  }\n\n  /**\n   * Determines if the Hero can be moved backwards\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveBackwards(pos) {\n    const ranges = [[11, 20], [31, 40], [51, 60], [71, 80], [91, 100]];\n    return this.isInAnyRange(pos, ranges);\n  }\n\n  /**\n   * Checks if the Hero position is in any of the passed ranges\n   *\n   * @param {number} pos\n   * @param {array<[]>} ranges\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isInAnyRange(pos, ranges) {\n    const inR = range => inRange(pos, ...range);\n    return ranges.some(inR);\n  }\n\n  /**\n   * Checks if the Hero should move upwards\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveUp(pos) {\n    const corners = [10, 20, 30, 40, 50, 60, 70, 80, 90];\n    return corners.includes(pos);\n  }\n\n  /**\n   * Moves the Hero in the board after dice roll\n   *\n   * @param {object} state\n   * @param {object} prevState\n   * @memberof Hero\n   */\n  async setHeroPosition(state, prevState) {\n    const currentPosition = this.getHeroPosition(state);\n    const prevPosition = this.getHeroPosition(prevState);\n\n    if (currentPosition === prevPosition) return;\n\n    if (!this.isOnLadders(prevPosition) && !this.isOnSnakes(prevPosition)) {\n      await this.moveHero(prevPosition, currentPosition);\n      this.stopAnimations();\n      await sleep(100);\n    }\n\n    if (this.isOnLadders(currentPosition)) {\n      const start = currentPosition;\n      const end = this.config.laddersPositions[start];\n      await this.moveAsync({\n        x: this._gameObject.x + end.offsetX,\n        y: this._gameObject.y + end.offsetY\n      });\n\n      setPlayerProps(this.name, { position: end.position });\n    }\n\n    if (this.isOnSnakes(currentPosition)) {\n      const start = currentPosition;\n      const end = this.config.snakePositions[start];\n      await this.moveAsync({\n        x: this._gameObject.x + end.offsetX,\n        y: this._gameObject.y + end.offsetY\n      });\n\n      setPlayerProps(this.name, { position: end.position });\n    }\n\n    if(currentPosition > 100) {\n      setPlayerProps(this.name, { position: 200 - currentPosition });\n    }\n  }\n\n  /**\n   * Check if the hero is on the root of a ladder\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isOnLadders(pos) {\n    const posis = [...Object.keys(this.config.laddersPositions)].map(p =>\n      parseInt(p)\n    );\n    return posis.includes(pos);\n  }\n\n  /**\n   * Check if the hero is on the head of a snake\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isOnSnakes(pos) {\n    const posis = [...Object.keys(this.config.snakePositions)].map(p =>\n      parseInt(p)\n    );\n    return posis.includes(pos);\n  }\n\n  /**\n   * Move hero step by step\n   *\n   * @param {number} start\n   * @param {number} end\n   * @memberof Hero\n   */\n  async moveHero(start, end) {\n    end = end > 100 ? end + 1 : end;\n  \n    for (let i = start; i < end; i++) {\n      const current = i;\n      const move = i > 100 ? (200 - i) : i;\n\n      if (this.shouldMoveForward(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkForward`);\n        await this.moveForward();\n      } else if (this.shouldMoveUp(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkUp`);\n        await this.moveUp();\n      } else if (this.shouldMoveBackwards(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkBackwards`);\n        await this.moveBackwards();\n      } else if(current > 100) {\n        this._gameObject.anims.play(`${this.name}walkForward`);\n        await this.moveForward();\n      }\n    }\n  }\n\n  /**\n   * Moves Hero backwards in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveBackwards(offsetX = 50) {\n    const newPosition = this._gameObject.x - offsetX;\n    return this.moveAsync({ x: newPosition });\n  }\n\n  /**\n   * Moves Hero Forward in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveForward(offsetX = 50) {\n    const newPosition = this._gameObject.x + offsetX;\n    return this.moveAsync({ x: newPosition });\n  }\n\n  /**\n   * Moves Hero up in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveUp(offsetY = 50) {\n    const newPosition = this._gameObject.y - offsetY;\n    return this.moveAsync({ y: newPosition });\n  }\n}\n","import GameObject from \"./GameObject\";\nimport shuffle from \"lodash/shuffle\";\nimport { setDice, stopDice } from \"../store/actions\";\n\n\n/**\n * Dice\n *\n * @export\n * @class Dice\n * @extends {GameObject}\n */\nexport default class Dice extends GameObject {\n  constructor(scene, x, y, name, frameIndex){\n    super(scene, x, y, name, frameIndex);\n    this._gameObjectAnim = this._gameObject.anims.load(\"roll\");\n  }\n\n  /**\n   * Called whenever the store is upaded\n   *\n   * @param {object} { state, prevState }\n   * @returns\n   * @memberof Hero\n   */\n  stateDidUpdate({ state, prevState }) {\n    if (state.diceState === \"rolling\") {\n      this.animate();\n    }\n  }\n\n  /**\n   * Generate frames out of sprite sheet\n   *\n   * @returns {array<Frame>}\n   * @memberof Dice\n   */\n  getFrames() {\n    let frames = this.scene.anims.generateFrameNumbers(\"dice\");\n    frames = frames.filter(\n      fr => fr.frame > 15 && fr.frame < frames.length - 15\n    );\n    return shuffle(frames);\n  }\n\n  /**\n   * Creates the dice gameobject\n   *\n   * @param {number} [x=50]\n   * @param {number} [y=50]\n   * @returns\n   * @memberof Dice\n   */\n  create(x = 50, y = 50) {\n    this._gameObject = this.scene.add.sprite(x, y, \"dice\");\n  }\n\n  animate() {\n    const frames = this.getFrames();\n    const pausingFramesIndexes = Object.keys(this.config.pausingFrames).map(i => +i);\n    const pausingFrames = frames.filter(fr => pausingFramesIndexes.includes(fr.frame));\n    \n    this.createAnimation({\n      key: \"roll\",\n      frames,\n      duration: 2000,\n    });\n  \n    this._gameObject.anims.play(\"roll\");\n\n    const f = pausingFrames[Math.floor(Math.random() * 12)];\n\n    this.moveAsync({ x: Math.random() * 400 + 50, y: Math.random() * 400 + 50,\n      onComplete: () => {\n        this._gameObject.anims.stop();\n        this._gameObject.setFrame(f.frame);\n        stopDice();\n        setDice(this.config.pausingFrames[`${f.frame}`]);\n      }\n    }, 1700);\n  }\n}\n","import phaser from 'phaser';\nimport config from '../config';\nimport { addPlayer } from '../store/actions';\nimport Hero from '../gameObjects/Hero';\nimport Dice from '../gameObjects/Dice';\n\nexport default class InitScene extends phaser.Scene {\n    constructor () {\n        super({\n            key: 'initscene'\n        })\n    }\n\n    create () {\n      this.staticBg = this.add.image(config.boardWidth/2, config.boardHeight/2, 'board')\n      this.staticBg.scaleY = 0.5;\n      this.staticBg.scaleX = 0.5;\n\n      window.hero = new Hero(this, 60, config.boardHeight - 75, 'player1', 0);\n      addPlayer('player1');\n      this.hero2 = new Hero(this, 50, config.boardHeight - 75, 'player2', 0);\n      addPlayer('player2');\n      this.dice = new Dice(this, 100, 100, 'dice', 0);\n    }\n}\n","import phaser from 'phaser';\nimport PreloadScene from '../scenes/PreloadScene';\nimport InitScene from '../scenes/InitScene';\nimport config from '../config';\n\nconst defaultConfig = {\n    width: config.boardWidth,\n    height: config.boardHeight,\n    scene: [\n      PreloadScene,\n      InitScene,\n    ]\n};\n\nexport function createGame(parent){\n  const config = {\n    ...defaultConfig,\n    parent,\n  }\n  const game = new phaser.Game(config);\n  return game;\n};\n","import React, { Component } from \"react\";\nimport { rollDice } from \"../../store/actions\";\nimport { state } from \"../../store\";\nimport \"./PlayingBar.css\";\n\nclass PlayingBar extends Component {\n  state = {\n    playingPlayer: \"player1\",\n    dice: -1,\n    diceState: \"stop\"\n  };\n\n  componentDidMount() {\n    state.subscribe({\n      next: ({ state, prevState }) => {\n        this.setState({\n          playingPlayer: state.playingPlayer,\n          dice: state.dice,\n          diceState: state.diceState\n        });\n\n        if (\n          (state.playingPlayer === \"player2\" &&\n            prevState.playingPlayer === \"player1\") \n            // || (state.playingPlayer === \"player2\" &&\n            // prevState.playingPlayer === \"player2\" &&\n            // state.dice === 6)\n        ) {\n          setTimeout(() => rollDice(), 3000);\n        }\n      }\n    });\n  }\n\n  getPlayerName() {\n    return this.state.playingPlayer.includes(\"1\") ? \"You\" : \"Computer\";\n  }\n\n  render() {\n    const player = this.getPlayerName();\n\n    return (\n      <div className=\"playing-bar\">\n        <div className=\"labels-container\">\n          <label>\n            <strong>Playing: </strong>\n            <span className={player.toLowerCase()}>{player}</span>\n          </label>\n          <label>\n            <strong>Last Dice: </strong>\n            {this.state.dice > 0 ? this.state.dice : \"-\"}\n          </label>\n        </div>\n        <div className=\"button-container\">\n          <button\n            disabled={\n              this.state.diceState === \"rolling\" ||\n              this.state.playingPlayer === \"player2\"\n            }\n            onClick={rollDice}\n          >\n            Roll the dice\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlayingBar;\n","import React, { Component } from \"react\";\nimport { state } from \"../../store\";\nimport classNames from \"classnames\";\nimport \"./Info.css\";\n\nexport default class Info extends Component {\n  state = {\n    position: 1,\n    rolls: 0,\n    playingPlayer: \"player1\"\n  };\n\n  componentDidMount() {\n    state.subscribe({\n      next: ({ state }) => {\n        this.setState({\n          ...state.players[this.props.player],\n          playingPlayer: state.playingPlayer\n        });\n      }\n    });\n  }\n\n  getPlayerName(){\n    return this.props.player === 'player1' ? 'You' : 'Computer'\n  }\n\n  render() {\n    const playerContainer = classNames(\"player-info-container\", {\n      \"playing-player\": this.state.playingPlayer === this.props.player,\n    });\n\n    return (\n      <div className=\"player-info\">\n        <div className={playerContainer}>\n          <h3>{this.getPlayerName()}</h3>\n          <h5>Position: {this.state.position}</h5>\n          <h5>Rolls: {this.state.rolls}</h5>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Rules.css'\n\nexport default class Rules extends Component {\n  render() {\n    return (\n      <span className='rules'>\n        <a href=\"https://en.wikipedia.org/wiki/Snakes_and_Ladders\" target=\"_blank\">History & Rules</a> \n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { createGame } from \"./game\";\nimport PlayingBar from \"./components/PlayingBar/PlayingBar\";\nimport Info from \"./components/Info/Info\";\nimport Rules from \"./components/Rules/Rules\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  componentDidMount() {\n    createGame(this.el);\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"container\">\n          <div>\n            <Rules />\n            <Info player=\"player1\" />\n          </div>\n          <div className=\"game-wrapper\">\n            <h2>Snakes and Ladders</h2>\n            <div ref={el => (this.el = el)} />\n            <PlayingBar />\n          </div>\n          <Info player=\"player2\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/board.9485ed2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dice.6dd8eb80.png\";","module.exports = __webpack_public_path__ + \"static/media/hero.e5eac10f.png\";","module.exports = __webpack_public_path__ + \"static/media/hero2.3c1ec8d0.png\";"],"sourceRoot":""}