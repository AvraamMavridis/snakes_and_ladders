{"version":3,"sources":["scenes/PreloadScene.js","config.js","store/actionTypes.js","store/initialState.js","store/reducer.js","store/actions.js","store/index.js","gameObjects/GameObject.js","helpers/index.js","gameObjects/Hero.js","gameObjects/Dice.js","scenes/InitScene.js","game/index.js","components/PlayingBar/PlayingBar.js","components/Info/Info.js","components/Rules/Rules.js","App.js","index.js","assets/board.jpg","assets/dice.png","assets/hero.png","assets/hero2.png"],"names":["PreloadScene","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","key","_this","load","image","board","spritesheet","dice","frameWidth","frameHeight","hero2","hero","setTimeout","scene","start","phaser","Scene","src_config","boardWidth","boardHeight","pausingFrames","1","2","3","4","5","6","laddersPositions","position","offsetX","offsetY","9","33","52","80","snakePositions","98","92","62","56","51","STOP_DICE","SET_DICE","SET_PLAYER_PROPS","RESET_GAME","initialState","diceState","players","player1","rolls","player2","playingPlayer","getPlayer","current","setDice","val","Math","floor","random","dispatch","action","payload","setPlayerProps","name","props","state","BehaviorSubject","prevState","store","next","bind","subscribe","_ref","newState","objectSpread","isOn100","reason","player","reducer","value","window","__state","GameObject","x","y","frameIndex","config","sprite","init","stateDidUpdate","arguments","length","undefined","_gameObject","add","Error","cfg","frameRate","repeat","duration","anims","create","movement","Promise","resolve","onComplete","apply","t","tween","targets","destroy","sleep","asyncToGenerator","regenerator_default","a","mark","_callee","time","wrap","_context","prev","abrupt","stop","_x","Hero","_getPrototypeOf2","_len","args","Array","_key","concat","__initX","__initY","scaleX","scaleY","createHeroAnimations","setHeroPosition","setX","setY","frames","generateFrameNumbers","createAnimation","slice","pos","isInAnyRange","ranges","some","range","inRange","toConsumableArray","includes","currentPosition","getHeroPosition","prevPosition","isOnLadders","isOnSnakes","moveHero","stopAnimations","end","moveAsync","keys","map","p","parseInt","i","move","shouldMoveForward","play","moveForward","shouldMoveUp","moveUp","shouldMoveBackwards","moveBackwards","newPosition","Dice","_gameObjectAnim","animate","filter","fr","frame","shuffle","diceNumber","_this2","getFrames","pausingFrame","find","currentFrame","setFrame","InitScene","staticBg","defaultConfig","width","height","__setDice","PlayingBar","setState","getPlayerName","_this$state","react_default","createElement","className","react","toLowerCase","disabled","onClick","Component","Info","playerContainer","classNames","playing-player","Rules","href","target","App","parent","el","Game","Rules_Rules_Rules","Info_Info_Info","ref","components_PlayingBar_PlayingBar","ReactDOM","render","App_App","document","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.c6c5f802.chunk.js","sourcesContent":["import phaser from 'phaser';\nimport board from '../assets/board.jpg';\nimport dice from '../assets/dice.png';\nimport hero from '../assets/hero.png';\nimport hero2 from '../assets/hero2.png';\n\n\nexport default class PreloadScene extends phaser.Scene {\n    constructor () {\n        super({\n            key: 'preloader'\n        })\n    }\n\n    preload () {\n      this.load.image('board', board);\n      this.load.spritesheet('dice', dice, { frameWidth: 46, frameHeight: 46 });\n      this.load.spritesheet('player2', hero2, { frameWidth: 128, frameHeight: 128 });\n      this.load.spritesheet('player1', hero, { frameWidth: 128, frameHeight: 128 });\n\n      setTimeout(() => {\n        this.scene.start('initscene')\n      }, 1000);\n    }\n}\n","export default {\n  boardWidth: 560,\n  boardHeight: 560,\n  pausingFrames: {\n    1: 48,\n    2: 52,\n    3: 96,\n    4: 20,\n    5: 60,\n    6: 56,\n  },\n  // pausingFrames: {\n  //   20: 4,\n  //   25: 4,\n  //   48: 1,\n  //   52: 2,\n  //   56: 6,\n  //   60: 5,\n  //   64: 1,\n  //   68: 2,\n  //   72: 6,\n  //   76: 5,\n  //   96: 3,\n  //   112: 3,\n  // },\n  laddersPositions: {\n    2: {\n      position: 38,\n      offsetX: 50,\n      offsetY: -150, \n    },\n    4: {\n      position: 14,\n      offsetX: 150,\n      offsetY: -50, \n    },\n    9: {\n      position: 31,\n      offsetX: 50,\n      offsetY: -150, \n    },\n    33: {\n      position: 85,\n      offsetX: -150,\n      offsetY: -250, \n    },\n    52: {\n      position: 88,\n      offsetX: -50,\n      offsetY: -150, \n    },\n    80: {\n      position: 99,\n      offsetX: 50,\n      offsetY: -100, \n    },\n  },\n  snakePositions: {\n    98: {\n      position: 8,\n      offsetX: 250,\n      offsetY: 450, \n    },\n    92:{\n      position: 53,\n      offsetX: -50,\n      offsetY: 200, \n    },\n    62: {\n      position: 57,\n      offsetX: 100,\n      offsetY: 50, \n    },\n    56: {\n      position: 15,\n      offsetX: 50,\n      offsetY: 200, \n    },\n    51: {\n      position: 11,\n      offsetX: 0,\n      offsetY: 200, \n    },\n  }\n}\n","export const STOP_DICE = 'STOP_DICE';\nexport const SET_DICE = 'SET_DICE';\nexport const SET_PLAYER_PROPS = 'SET_PLAYER_PROPS';\nexport const RESET_GAME = 'RESET_GAME';\n","export default {\n  dice: -1,\n  diceState: 'hidden',\n  players: {\n    player1: { position: 1, rolls: 0 },\n    player2: { position: 1, rolls: 0 },\n  },\n  playingPlayer: 'player1'\n}\n","import {\n  RESET_GAME,\n  STOP_DICE,\n  SET_DICE,\n  SET_PLAYER_PROPS,\n} from \"./actionTypes\";\nimport initialState from './initialState';\n\nconst getPlayer = (dice, current) => {\n  let playingPlayer;\n\n  if(dice === 6){\n    playingPlayer = current;\n  } else {\n    playingPlayer = current === 'player1' ? 'player2' : 'player1';\n  }\n\n  return playingPlayer;\n}\n\nexport default (prevState, action, payload) => {\n  switch (action) {\n    case RESET_GAME: {\n      return {\n        ...initialState,\n      }\n    }\n\n    case STOP_DICE: {\n      const playingPlayer = getPlayer(prevState.dice, prevState.playingPlayer);\n\n      const players = { ...prevState.players };\n      players[playingPlayer] = {\n        ...players[playingPlayer],\n        position: prevState.dice + prevState.players[playingPlayer].position,\n        reason: 'fromDice'\n      };\n\n      let isOn100;\n      if (players.player1.position === 100) {\n        isOn100 = \"You\";\n      } else if (players.player2.position === 100) {\n        isOn100 = \"Computer\";\n      }\n\n      return {\n        ...prevState,\n        players,\n        diceState: \"pause\",\n        isOn100\n      };\n    }\n\n    case SET_DICE: {\n      const player = prevState.playingPlayer;\n      const players = { ...prevState.players };\n      players[player] = {\n        ...players[player],\n        rolls: 1 + prevState.players[player].rolls\n      };\n\n      let isOn100;\n      if (players.player1.position === 100) {\n        isOn100 = \"You\";\n      } else if (players.player2.position === 100) {\n        isOn100 = \"Computer\";\n      }\n\n      return {\n        ...prevState,\n        playingPlayer: getPlayer(payload, player),\n        dice: payload,\n        diceState: \"rolling\",\n        players,\n        isOn100\n      };\n    }\n\n    case SET_PLAYER_PROPS:\n      const players = { ...prevState.players };\n      players[payload.name] = {\n        ...players[payload.name],\n        ...payload.props\n      };\n\n      return {\n        ...prevState,\n        players\n      };\n\n    default:\n      return prevState;\n  }\n};\n","import { dispatch } from \"../store\";\nimport {\n  RESET_GAME,\n  STOP_DICE,\n  SET_DICE,\n  SET_PLAYER_PROPS,\n} from \"./actionTypes\";\n\nexport function stopDice() {\n  dispatch({\n    action: STOP_DICE\n  });\n}\n\nexport function setDice(val) {\n  const dice = val || Math.floor(Math.random() * 6) + 1;\n  dispatch({\n    action: SET_DICE,\n    payload: dice,\n  });\n}\n\nexport function resetGame() {\n  dispatch({\n    action: RESET_GAME\n  });\n}\n\nexport function setPlayerProps(name, props) {\n  dispatch({\n    action: SET_PLAYER_PROPS,\n    payload: {\n      name,\n      props,\n    }\n  });\n}\n","import { BehaviorSubject } from 'rxjs';\nimport reducer from './reducer';\nimport { setDice } from './actions';\nimport initialState from './initialState';\n\nconst action = '';\n\nexport const state = new BehaviorSubject({ state: initialState, prevState: {} });\n\nconst store = new BehaviorSubject(action);\nexport const dispatch = store.next.bind(store);\n\nstore.subscribe({\n  next: ({action, payload}) => {\n    const newState = reducer(state.value.state, action, payload);\n\n    state.next({\n      state: newState,\n      prevState: state.value.state,\n    });\n\n    if(!newState.isOn100 && newState.playingPlayer === \"player2\" && newState.diceState === \"pause\"\n      && newState.players.player1 && newState.players.player1.reason === 'fromDice'){\n      setTimeout(setDice, Math.random() * 1000 + 4000)\n    }\n    window.__state = state.value.state;\n  },\n})\n","import { state } from '../store';\nimport config from '../config';\n\n/**\n * Base Class that every game object should inherit\n *\n * @export\n * @class GameObject\n */\nexport default class GameObject {\n  constructor(scene, x, y, name, frameIndex) {\n    this.scene = scene;\n    this.state = state;\n    this.config = config;\n    this.name = name;\n    this.sprite = name;\n    this.init(x, y, name, frameIndex);\n\n    this.stateDidUpdate = this.stateDidUpdate.bind(this);\n    this.state.subscribe({ next: this.stateDidUpdate });\n  }\n\n  /**\n   * Creates the gameobject\n   *\n   * @param {number} [x=50]\n   * @param {number} [y=50]\n   * @returns\n   * @memberof Dice\n   */\n  init(x = 50, y = 50, name = 'gameobject', frameIndex = 0) {\n    this._gameObject = this.scene.add.sprite(x, y, name, frameIndex);\n  }\n\n  /**\n   * Called whenever the state of the game is updated\n   *\n   * @memberof GameObject\n   */\n  stateDidUpdate(){\n    throw new Error('Gameobject should implement this function');\n  }\n\n  /**\n   * Create an animation\n   *\n   * @param {object} [config={ key, frames, frameRate = 10 }]\n   * @returns {Animation}\n   * @memberof GameObject\n   */\n  createAnimation(config){\n    const cfg = {\n      frameRate: 10,\n      repeat: -1,\n      ...config,\n    };\n\n    if(cfg.duration) {\n      delete cfg.frameRate;\n      delete cfg.repeat;\n    }\n\n    return this.scene.anims.create(cfg);\n  }\n\n  /**\n   * Moves the gameobject\n   *\n   * @param {object} movement\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveAsync(movement, duration) {\n    return new Promise(resolve => {\n      const onComplete = movement.onComplete ? (...args) => {\n        movement.onComplete(...args);\n        resolve();\n      } : resolve;\n\n      this.t = this.scene.add.tween({\n        targets: this._gameObject,\n        onComplete,\n        duration: duration || 500,\n        ...movement\n      });\n    });\n  }\n\n  /**\n   * Clear sprite\n   * \n   * @memberof Gameobject\n   */\n  destroy() {\n    if (this._gameObject) this._gameObject.destroy();\n  }\n}\n","export const sleep = async function(time){\n    return new Promise(resolve => {\n        setTimeout(() => resolve(), time);\n    });\n};","import GameObject from \"./GameObject\";\nimport inRange from \"lodash/inRange\";\nimport { sleep } from \"../helpers\";\nimport { setPlayerProps } from \"../store/actions\";\n\n/**\n * Player Character\n *\n * @export\n * @class Hero\n * @extends {GameObject}\n */\nexport default class Hero extends GameObject {\n  constructor(...args) {\n    super(...args);\n    this.__initX = args[1];\n    this.__initY = args[2];\n    this._gameObject.scaleX = 0.7;\n    this._gameObject.scaleY = 0.7;\n    this.createHeroAnimations();\n  }\n\n  /**\n   * Called whenever the store is upaded\n   *\n   * @param {object} { state, prevState }\n   * @returns\n   * @memberof Hero\n   */\n  stateDidUpdate({ state, prevState }) {\n    this.setHeroPosition(state, prevState);\n\n    if(state.players[this.name].position === 1 && this.__initX && this.__initY){\n      this._gameObject.setX(this.__initX);\n      this._gameObject.setY(this.__initY);\n      this.createHeroAnimations();\n    }\n  }\n\n  /**\n   * Returns the character position in the board\n   *\n   * @param {object} state\n   * @returns {number}\n   * @memberof Hero\n   */\n  getHeroPosition(state) {\n    const player = state.players[this.name];\n    return player ? state.players[this.name].position : 1;\n  }\n\n  /**\n   * Create and load the various animations for the Hero\n   *\n   * @memberof Hero\n   */\n  createHeroAnimations() {\n    const frames = this.scene.anims.generateFrameNumbers(this.sprite);\n    this.createAnimation({\n      key: `${this.name}walkBackwards`,\n      frames: frames.slice(0, 4),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkBackwards`);\n    this.createAnimation({\n      key: `${this.name}walkUp`,\n      frames: frames.slice(12, 16),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkUp`);\n    this.createAnimation({\n      key: `${this.name}walkForward`,\n      frames: frames.slice(4, 8),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkForward`);\n  }\n\n  /**\n   * Stop animations\n   *\n   * @memberof Hero\n   */\n  stopAnimations() {\n    this._gameObject.anims.stop(`${this.name}walkForward`);\n    this._gameObject.anims.stop(`${this.name}walkBackwards`);\n    this._gameObject.anims.stop(`${this.name}walkUp`);\n  }\n\n  /**\n   * Determines if the Hero can be moved forward\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveForward(pos) {\n    const ranges = [[1, 10], [21, 30], [41, 50], [61, 70], [81, 90]];\n    return this.isInAnyRange(pos, ranges);\n  }\n\n  /**\n   * Determines if the Hero can be moved backwards\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveBackwards(pos) {\n    const ranges = [[11, 20], [31, 40], [51, 60], [71, 80], [91, 100]];\n    return this.isInAnyRange(pos, ranges);\n  }\n\n  /**\n   * Checks if the Hero position is in any of the passed ranges\n   *\n   * @param {number} pos\n   * @param {array<[]>} ranges\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isInAnyRange(pos, ranges) {\n    const inR = range => inRange(pos, ...range);\n    return ranges.some(inR);\n  }\n\n  /**\n   * Checks if the Hero should move upwards\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveUp(pos) {\n    const corners = [10, 20, 30, 40, 50, 60, 70, 80, 90];\n    return corners.includes(pos);\n  }\n\n  /**\n   * Moves the Hero in the board after dice roll\n   *\n   * @param {object} state\n   * @param {object} prevState\n   * @memberof Hero\n   */\n  async setHeroPosition(state, prevState) {\n    const currentPosition = this.getHeroPosition(state);\n    const prevPosition = this.getHeroPosition(prevState);\n\n    if (currentPosition === prevPosition) return;\n\n    if (!this.isOnLadders(prevPosition) && !this.isOnSnakes(prevPosition)) {\n      await this.moveHero(prevPosition, currentPosition);\n      this.stopAnimations();\n      await sleep(100);\n    }\n\n    if (this.isOnLadders(currentPosition)) {\n      const start = currentPosition;\n      const end = this.config.laddersPositions[start];\n      await this.moveAsync({\n        x: this._gameObject.x + end.offsetX,\n        y: this._gameObject.y + end.offsetY\n      });\n\n      setPlayerProps(this.name, { position: end.position, reason: 'fromLadder' });\n    }\n\n    if (this.isOnSnakes(currentPosition)) {\n      const start = currentPosition;\n      const end = this.config.snakePositions[start];\n      await this.moveAsync({\n        x: this._gameObject.x + end.offsetX,\n        y: this._gameObject.y + end.offsetY\n      });\n\n      setPlayerProps(this.name, { position: end.position, reason: 'fromSname' });\n    }\n\n    if(currentPosition > 100) {\n      setPlayerProps(this.name, { position: 200 - currentPosition, reason: 'greater100' });\n    }\n  }\n\n  /**\n   * Check if the hero is on the root of a ladder\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isOnLadders(pos) {\n    const posis = [...Object.keys(this.config.laddersPositions)].map(p =>\n      parseInt(p)\n    );\n    return posis.includes(pos);\n  }\n\n  /**\n   * Check if the hero is on the head of a snake\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isOnSnakes(pos) {\n    const posis = [...Object.keys(this.config.snakePositions)].map(p =>\n      parseInt(p)\n    );\n    return posis.includes(pos);\n  }\n\n  /**\n   * Move hero step by step\n   *\n   * @param {number} start\n   * @param {number} end\n   * @memberof Hero\n   */\n  async moveHero(start, end) {\n    end = end > 100 ? end + 1 : end;\n  \n    for (let i = start; i < end; i++) {\n      const current = i;\n      const move = i > 100 ? (200 - i) : i;\n\n      if (this.shouldMoveForward(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkForward`);\n        await this.moveForward();\n      } else if (this.shouldMoveUp(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkUp`);\n        await this.moveUp();\n      } else if (this.shouldMoveBackwards(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkBackwards`);\n        await this.moveBackwards();\n      } else if(current > 100) {\n        this._gameObject.anims.play(`${this.name}walkForward`);\n        await this.moveForward();\n      }\n    }\n  }\n\n  /**\n   * Moves Hero backwards in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveBackwards(offsetX = 50) {\n    const newPosition = this._gameObject.x - offsetX;\n    return this.moveAsync({ x: newPosition });\n  }\n\n  /**\n   * Moves Hero Forward in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveForward(offsetX = 50) {\n    const newPosition = this._gameObject.x + offsetX;\n    return this.moveAsync({ x: newPosition });\n  }\n\n  /**\n   * Moves Hero up in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveUp(offsetY = 50) {\n    const newPosition = this._gameObject.y - offsetY;\n    return this.moveAsync({ y: newPosition });\n  }\n}\n","import GameObject from \"./GameObject\";\nimport shuffle from \"lodash/shuffle\";\nimport { stopDice } from \"../store/actions\";\n\n\n/**\n * Dice\n *\n * @export\n * @class Dice\n * @extends {GameObject}\n */\nexport default class Dice extends GameObject {\n  constructor(scene, x, y, name, frameIndex){\n    super(scene, x, y, name, frameIndex);\n    this._gameObjectAnim = this._gameObject.anims.load(\"roll\");\n  }\n\n  /**\n   * Called whenever the store is upaded\n   *\n   * @param {object} { state, prevState }\n   * @returns\n   * @memberof Hero\n   */\n  stateDidUpdate({ state, prevState }) {\n    this.state = state;\n    if (state.diceState === \"rolling\") {\n      this.animate(state.dice);\n    }\n  }\n\n  /**\n   * Generate frames out of sprite sheet\n   *\n   * @returns {array<Frame>}\n   * @memberof Dice\n   */\n  getFrames() {\n    let frames = this.scene.anims.generateFrameNumbers(\"dice\");\n    frames = frames.filter(\n      fr => fr.frame > 15 && fr.frame < frames.length - 15\n    );\n    return shuffle(frames);\n  }\n\n  /**\n   * Creates the dice gameobject\n   *\n   * @param {number} [x=50]\n   * @param {number} [y=50]\n   * @returns\n   * @memberof Dice\n   */\n  create(x = 50, y = 50) {\n    this._gameObject = this.scene.add.sprite(x, y, \"dice\");\n  }\n\n  animate(diceNumber) {\n    const frames = this.getFrames();\n    let pausingFrame = this.config.pausingFrames[`${diceNumber}`];\n    pausingFrame = frames.find(fr => pausingFrame === fr.frame);\n\n    this.createAnimation({\n      key: \"roll\",\n      frames,\n      duration: 2000,\n    });\n  \n    this._gameObject.anims.play(\"roll\");\n    const currentFrame = pausingFrame.frame;\n\n    this.moveAsync({ x: Math.random() * 400 + 50, y: Math.random() * 400 + 50,\n      onComplete: () => {\n        this._gameObject.anims.stop();\n        this._gameObject.setFrame(currentFrame);\n        stopDice();\n      }\n    }, 1700);\n  }\n}\n","import phaser from 'phaser';\nimport config from '../config';\nimport Hero from '../gameObjects/Hero';\nimport Dice from '../gameObjects/Dice';\n\nexport default class InitScene extends phaser.Scene {\n    constructor () {\n        super({\n            key: 'initscene'\n        })\n    }\n\n    create () {\n      this.staticBg = this.add.image(config.boardWidth/2, config.boardHeight/2, 'board')\n      this.staticBg.scaleY = 0.5;\n      this.staticBg.scaleX = 0.5;\n\n      this.hero = new Hero(this, 60, config.boardHeight - 75, 'player1', 0);\n      this.hero2 = new Hero(this, 50, config.boardHeight - 75, 'player2', 0);\n      this.dice = new Dice(this, 100, 100, 'dice', 0);\n    }\n}\n","import phaser from 'phaser';\nimport PreloadScene from '../scenes/PreloadScene';\nimport InitScene from '../scenes/InitScene';\nimport config from '../config';\n\nconst defaultConfig = {\n    width: config.boardWidth,\n    height: config.boardHeight,\n    scene: [\n      PreloadScene,\n      InitScene,\n    ]\n};\n\nexport function createGame(parent){\n  const config = {\n    ...defaultConfig,\n    parent,\n  }\n  const game = new phaser.Game(config);\n  return game;\n};\n","import React, { Component, Fragment } from \"react\";\nimport { setDice, resetGame } from \"../../store/actions\";\nimport { state } from \"../../store\";\nimport \"./PlayingBar.css\";\n\nwindow.__setDice = setDice;\n\nclass PlayingBar extends Component {\n  state = {\n    playingPlayer: \"player1\",\n    dice: -1,\n    diceState: \"stop\",\n    isOn100: undefined\n  };\n\n  componentDidMount() {\n    state.subscribe({\n      next: ({ state }) => {\n        this.setState({\n          playingPlayer: state.playingPlayer,\n          dice: state.dice,\n          diceState: state.diceState,\n          isOn100: state.isOn100,\n        });\n      }\n    });\n  }\n\n  getPlayerName() {\n    return this.state.playingPlayer.includes(\"1\") ? \"You\" : \"Computer\";\n  }\n\n  render() {\n    const player = this.getPlayerName();\n    const { diceState, playingPlayer, isOn100 } = this.state;\n\n    return (\n      <div className=\"playing-bar\">\n        <div className=\"labels-container\">\n          {isOn100 ? (\n            <span className='winner'>{`Winner: ${isOn100}`}</span>\n          ) : (\n            <Fragment>\n              <label>\n                <strong>Playing next: </strong>\n                <span className={player.toLowerCase()}>{player}</span>\n              </label>\n              <label>\n                <strong>Last Dice: </strong>\n                {this.state.dice > 0 ? this.state.dice : \"-\"}\n              </label>\n            </Fragment>\n          )}\n        </div>\n        <div className=\"button-container\">\n          <button\n            disabled={\n              (diceState === \"rolling\" || playingPlayer === \"player2\")\n              && !isOn100\n            }\n            onClick={() => isOn100 ? resetGame() : setDice()}\n          >\n            { isOn100 ? 'Start new game' :  'Roll the dice' }\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlayingBar;\n","import React, { Component } from \"react\";\nimport { state } from \"../../store\";\nimport classNames from \"classnames\";\nimport \"./Info.css\";\n\nexport default class Info extends Component {\n  state = {\n    position: 1,\n    rolls: 0,\n    playingPlayer: \"player1\"\n  };\n\n  componentDidMount() {\n    state.subscribe({\n      next: ({ state }) => {\n        this.setState({\n          ...state.players[this.props.player],\n          playingPlayer: state.playingPlayer\n        });\n      }\n    });\n  }\n\n  getPlayerName(){\n    return this.props.player === 'player1' ? 'You' : 'Computer'\n  }\n\n  render() {\n    const playerContainer = classNames(\"player-info-container\", {\n      \"playing-player\": this.state.playingPlayer === this.props.player,\n    });\n\n    return (\n      <div className=\"player-info\">\n        <div className={playerContainer}>\n          <h3>{this.getPlayerName()}</h3>\n          <h5>Position: {this.state.position}</h5>\n          <h5>Rolls: {this.state.rolls}</h5>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Rules.css'\n\nexport default class Rules extends Component {\n  render() {\n    return (\n      <span className='rules'>\n        <a href=\"https://en.wikipedia.org/wiki/Snakes_and_Ladders\" target=\"_blank\">History & Rules</a> \n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { createGame } from \"./game\";\nimport PlayingBar from \"./components/PlayingBar/PlayingBar\";\nimport Info from \"./components/Info/Info\";\nimport Rules from \"./components/Rules/Rules\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  componentDidMount() {\n    createGame(this.el);\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"container\">\n          <div>\n            <Rules />\n            <Info player=\"player1\" />\n          </div>\n          <div className=\"game-wrapper\">\n            <h2>Snakes and Ladders</h2>\n            <div ref={el => (this.el = el)} />\n            <PlayingBar />\n          </div>\n          <Info player=\"player2\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/board.9485ed2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dice.6dd8eb80.png\";","module.exports = __webpack_public_path__ + \"static/media/hero.e5eac10f.png\";","module.exports = __webpack_public_path__ + \"static/media/hero2.3c1ec8d0.png\";"],"sourceRoot":""}