{"version":3,"sources":["scenes/PreloadScene.js","config.js","store/actionTypes.js","store/initialState.js","store/reducer.js","store/actions.js","store/index.js","gameObjects/GameObject.js","helpers/index.js","gameObjects/Hero.js","gameObjects/Dice.js","scenes/InitScene.js","game/index.js","components/PlayingBar/PlayingBar.js","components/Info/Info.js","components/Rules/Rules.js","components/PersonalInfo/PersonalInfo.js","App.js","index.js","assets/board.jpg","assets/dice.png","assets/hero.png","assets/hero2.png"],"names":["PreloadScene","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","key","_this","load","image","board","spritesheet","dice","frameWidth","frameHeight","hero2","hero","setTimeout","scene","start","phaser","Scene","src_config","winningPosition","diceRerollPosition","boardWidth","boardHeight","pausingFrames","1","2","3","4","5","6","laddersPositions","position","offsetX","offsetY","9","33","52","80","snakePositions","98","92","62","56","51","STOP_DICE","SET_DICE","SET_PLAYER_PROPS","RESET_GAME","initialState","diceState","players","player1","rolls","player2","playingPlayer","getPlayer","currentPlayer","config","setDice","val","Math","floor","random","dispatch","action","payload","setPlayerProps","name","props","state","BehaviorSubject","prevState","store","next","bind","subscribe","_ref","newState","objectSpread","isOn100","reason","player","reducer","value","window","__state","GameObject","x","y","frameIndex","sprite","init","stateDidUpdate","arguments","length","undefined","_gameObject","add","Error","cfg","frameRate","repeat","duration","anims","create","movement","Promise","resolve","onComplete","apply","t","tween","targets","destroy","sleep","asyncToGenerator","regenerator_default","a","mark","_callee","time","wrap","_context","prev","abrupt","stop","_x","Hero","_getPrototypeOf2","_len","args","Array","_key","concat","__initX","__initY","scaleX","scaleY","createHeroAnimations","setHeroPosition","setX","setY","frames","generateFrameNumbers","createAnimation","slice","pos","isInAnyRange","ranges","some","range","inRange","toConsumableArray","includes","currentPosition","getHeroPosition","prevPosition","isOnLadders","isOnSnakes","moveHero","stopAnimations","end","moveAsync","keys","map","p","parseInt","i","current","move","shouldMoveForward","play","moveForward","shouldMoveUp","moveUp","shouldMoveBackwards","moveBackwards","newPosition","Dice","_gameObjectAnim","animate","filter","fr","frame","shuffle","diceNumber","_this2","getFrames","pausingFrame","find","currentFrame","setFrame","InitScene","staticBg","defaultConfig","width","height","__setDice","PlayingBar","setState","getPlayerName","_this$state","react_default","createElement","className","react","toLowerCase","disabled","onClick","Component","Info","playerContainer","classNames","playing-player","Rules","href","target","PersonalInfo","App","parent","el","Game","Rules_Rules_Rules","Info_Info_Info","ref","components_PlayingBar_PlayingBar","PersonalInfo_PersonalInfo_PersonalInfo","ReactDOM","render","App_App","document","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.8e83b6d6.chunk.js","sourcesContent":["import phaser from 'phaser';\nimport board from '../assets/board.jpg';\nimport dice from '../assets/dice.png';\nimport hero from '../assets/hero.png';\nimport hero2 from '../assets/hero2.png';\n\n\n/**\n * The sence is just for preloading some assets before the game\n * starts\n *\n * @export\n * @class PreloadScene\n * @extends {phaser.Scene}\n */\nexport default class PreloadScene extends phaser.Scene {\n    constructor () {\n        super({\n            key: 'preloader'\n        })\n    }\n\n    /**\n     * Preload assets\n     *\n     * @memberof PreloadScene\n     */\n    preload () {\n      this.load.image('board', board);\n      this.load.spritesheet('dice', dice, { frameWidth: 46, frameHeight: 46 });\n      this.load.spritesheet('player2', hero2, { frameWidth: 128, frameHeight: 128 });\n      this.load.spritesheet('player1', hero, { frameWidth: 128, frameHeight: 128 });\n\n      setTimeout(() => {\n        // switch to the actual scene\n        this.scene.start('initscene')\n      }, 1500);\n    }\n}\n","export default {\n  winningPosition: 100,\n  diceRerollPosition: 6,\n  boardWidth: 560,\n  boardHeight: 560,\n  pausingFrames: {\n    1: 64,\n    2: 68,\n    3: 128,\n    4: 16,\n    5: 76,\n    6: 72,\n  },\n  laddersPositions: {\n    2: {\n      position: 38,\n      offsetX: 50,\n      offsetY: -150, \n    },\n    4: {\n      position: 14,\n      offsetX: 150,\n      offsetY: -50, \n    },\n    9: {\n      position: 31,\n      offsetX: 50,\n      offsetY: -150, \n    },\n    33: {\n      position: 85,\n      offsetX: -150,\n      offsetY: -250, \n    },\n    52: {\n      position: 88,\n      offsetX: -50,\n      offsetY: -150, \n    },\n    80: {\n      position: 99,\n      offsetX: 50,\n      offsetY: -100, \n    },\n  },\n  snakePositions: {\n    98: {\n      position: 8,\n      offsetX: 250,\n      offsetY: 450, \n    },\n    92:{\n      position: 53,\n      offsetX: -50,\n      offsetY: 200, \n    },\n    62: {\n      position: 57,\n      offsetX: 100,\n      offsetY: 50, \n    },\n    56: {\n      position: 15,\n      offsetX: 50,\n      offsetY: 200, \n    },\n    51: {\n      position: 11,\n      offsetX: 0,\n      offsetY: 200, \n    },\n  }\n}\n","export const STOP_DICE = 'STOP_DICE';\nexport const SET_DICE = 'SET_DICE';\nexport const SET_PLAYER_PROPS = 'SET_PLAYER_PROPS';\nexport const RESET_GAME = 'RESET_GAME';\n","export default {\n  dice: -1,\n  diceState: 'hidden',\n  players: {\n    player1: { position: 1, rolls: 0 },\n    player2: { position: 1, rolls: 0 },\n  },\n  playingPlayer: 'player1'\n}\n","import {\n  RESET_GAME,\n  STOP_DICE,\n  SET_DICE,\n  SET_PLAYER_PROPS,\n} from \"./actionTypes\";\nimport initialState from './initialState';\nimport config from '../config';\n\n/**\n * Returns the player that should play\n * in the next turn\n *\n * @param {number} dice\n * @param {string} current\n * @returns {string}\n */\nconst getPlayer = (dice, currentPlayer) => {\n  let playingPlayer;\n\n  if(dice === config.diceRerollPosition){\n    playingPlayer = currentPlayer;\n  } else {\n    playingPlayer = currentPlayer === 'player1' ? 'player2' : 'player1';\n  }\n\n  return playingPlayer;\n}\n\n/**\n * Modifies the state of the game\n *\n * @param {object} prevState\n * @param {string} action\n * @param {payload} payload\n * @returns {string}\n */\nexport default (prevState, action, payload) => {\n  switch (action) {\n    case RESET_GAME: {\n      return {\n        ...initialState,\n      }\n    }\n\n    case STOP_DICE: {\n      const playingPlayer = getPlayer(prevState.dice, prevState.playingPlayer);\n\n      const players = { ...prevState.players };\n      players[playingPlayer] = {\n        ...players[playingPlayer],\n        position: prevState.dice + prevState.players[playingPlayer].position,\n        reason: 'fromDice'\n      };\n\n      let isOn100;\n      if (players.player1.position === config.winningPosition) {\n        isOn100 = \"You\";\n      } else if (players.player2.position === config.winningPosition) {\n        isOn100 = \"Computer\";\n      }\n\n      return {\n        ...prevState,\n        players,\n        diceState: \"pause\",\n        isOn100\n      };\n    }\n\n    case SET_DICE: {\n      const player = prevState.playingPlayer;\n      const players = { ...prevState.players };\n      players[player] = {\n        ...players[player],\n        rolls: 1 + prevState.players[player].rolls\n      };\n\n      let isOn100;\n      if (players.player1.position === config.winningPosition) {\n        isOn100 = \"You\";\n      } else if (players.player2.position === config.winningPosition) {\n        isOn100 = \"Computer\";\n      }\n\n      return {\n        ...prevState,\n        playingPlayer: getPlayer(payload, player),\n        dice: payload,\n        diceState: \"rolling\",\n        players,\n        isOn100\n      };\n    }\n\n    case SET_PLAYER_PROPS:\n      const players = { ...prevState.players };\n      players[payload.name] = {\n        ...players[payload.name],\n        ...payload.props\n      };\n\n      return {\n        ...prevState,\n        players\n      };\n\n    default:\n      return prevState;\n  }\n};\n","import { dispatch } from \"../store\";\nimport {\n  RESET_GAME,\n  STOP_DICE,\n  SET_DICE,\n  SET_PLAYER_PROPS,\n} from \"./actionTypes\";\n\nexport function stopDice() {\n  dispatch({\n    action: STOP_DICE\n  });\n}\n\nexport function setDice(val) {\n  const dice = val || Math.floor(Math.random() * 6) + 1;\n  dispatch({\n    action: SET_DICE,\n    payload: dice,\n  });\n}\n\nexport function resetGame() {\n  dispatch({\n    action: RESET_GAME\n  });\n}\n\nexport function setPlayerProps(name, props) {\n  dispatch({\n    action: SET_PLAYER_PROPS,\n    payload: {\n      name,\n      props,\n    }\n  });\n}\n","import { BehaviorSubject } from 'rxjs';\nimport reducer from './reducer';\nimport { setDice } from './actions';\nimport initialState from './initialState';\n\nconst action = '';\n\nexport const state = new BehaviorSubject({ state: initialState, prevState: {} });\n\nconst store = new BehaviorSubject(action);\nexport const dispatch = store.next.bind(store);\n\nstore.subscribe({\n  next: ({action, payload}) => {\n    const newState = reducer(state.value.state, action, payload);\n\n    state.next({\n      state: newState,\n      prevState: state.value.state,\n    });\n\n    if(!newState.isOn100 && newState.playingPlayer === \"player2\" && newState.diceState === \"pause\"\n      && newState.players.player1 && newState.players.player1.reason === 'fromDice'){\n      setTimeout(setDice, Math.random() * 1000 + 4000)\n    }\n    window.__state = state.value.state;\n  },\n})\n","import { state } from '../store';\nimport config from '../config';\n\n/**\n * Base Class that every game object should inherit\n *\n * @export\n * @class GameObject\n */\nexport default class GameObject {\n  constructor(scene, x, y, name, frameIndex) {\n    this.scene = scene;\n    this.state = state;\n    this.config = config;\n    this.name = name;\n    this.sprite = name;\n    this.init(x, y, name, frameIndex);\n\n    this.stateDidUpdate = this.stateDidUpdate.bind(this);\n    this.state.subscribe({ next: this.stateDidUpdate });\n  }\n\n  /**\n   * Creates the gameobject\n   *\n   * @param {number} [x=50]\n   * @param {number} [y=50]\n   * @returns\n   * @memberof Dice\n   */\n  init(x = 50, y = 50, name = 'gameobject', frameIndex = 0) {\n    this._gameObject = this.scene.add.sprite(x, y, name, frameIndex);\n  }\n\n  /**\n   * Called whenever the state of the game is updated\n   *\n   * @memberof GameObject\n   */\n  stateDidUpdate(){\n    throw new Error('Gameobject should implement this function');\n  }\n\n  /**\n   * Create an animation\n   *\n   * @param {object} [config={ key, frames, frameRate = 10 }]\n   * @returns {Animation}\n   * @memberof GameObject\n   */\n  createAnimation(config){\n    const cfg = {\n      frameRate: 10,\n      repeat: -1,\n      ...config,\n    };\n\n    if(cfg.duration) {\n      delete cfg.frameRate;\n      delete cfg.repeat;\n    }\n\n    return this.scene.anims.create(cfg);\n  }\n\n  /**\n   * Moves the gameobject\n   *\n   * @param {object} movement\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveAsync(movement, duration) {\n    return new Promise(resolve => {\n      const onComplete = movement.onComplete ? (...args) => {\n        movement.onComplete(...args);\n        resolve();\n      } : resolve;\n\n      this.t = this.scene.add.tween({\n        targets: this._gameObject,\n        onComplete,\n        duration: duration || 500,\n        ...movement\n      });\n    });\n  }\n\n  /**\n   * Clear sprite\n   * \n   * @memberof Gameobject\n   */\n  destroy() {\n    if (this._gameObject) this._gameObject.destroy();\n  }\n}\n","export const sleep = async function(time){\n    return new Promise(resolve => {\n        setTimeout(() => resolve(), time);\n    });\n};","import GameObject from \"./GameObject\";\nimport inRange from \"lodash/inRange\";\nimport { sleep } from \"../helpers\";\nimport { setPlayerProps } from \"../store/actions\";\n\n/**\n * Player Character\n *\n * @export\n * @class Hero\n * @extends {GameObject}\n */\nexport default class Hero extends GameObject {\n  constructor(...args) {\n    super(...args);\n    this.__initX = args[1];\n    this.__initY = args[2];\n    this._gameObject.scaleX = 0.7;\n    this._gameObject.scaleY = 0.7;\n    this.createHeroAnimations();\n  }\n\n  /**\n   * Called whenever the store is upaded\n   *\n   * @param {object} { state, prevState }\n   * @returns\n   * @memberof Hero\n   */\n  stateDidUpdate({ state, prevState }) {\n    this.setHeroPosition(state, prevState);\n\n    if(state.players[this.name].position === 1 && this.__initX && this.__initY){\n      this._gameObject.setX(this.__initX);\n      this._gameObject.setY(this.__initY);\n      this.createHeroAnimations();\n    }\n  }\n\n  /**\n   * Returns the character position in the board\n   *\n   * @param {object} state\n   * @returns {number}\n   * @memberof Hero\n   */\n  getHeroPosition(state) {\n    const player = state.players[this.name];\n    return player ? state.players[this.name].position : 1;\n  }\n\n  /**\n   * Create and load the various animations for the Hero\n   *\n   * @memberof Hero\n   */\n  createHeroAnimations() {\n    const frames = this.scene.anims.generateFrameNumbers(this.sprite);\n    this.createAnimation({\n      key: `${this.name}walkBackwards`,\n      frames: frames.slice(0, 4),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkBackwards`);\n    this.createAnimation({\n      key: `${this.name}walkUp`,\n      frames: frames.slice(12, 16),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkUp`);\n    this.createAnimation({\n      key: `${this.name}walkForward`,\n      frames: frames.slice(4, 8),\n      frameRate: 5\n    });\n    this._gameObject.anims.load(`${this.name}walkForward`);\n  }\n\n  /**\n   * Stop animations\n   *\n   * @memberof Hero\n   */\n  stopAnimations() {\n    this._gameObject.anims.stop(`${this.name}walkForward`);\n    this._gameObject.anims.stop(`${this.name}walkBackwards`);\n    this._gameObject.anims.stop(`${this.name}walkUp`);\n  }\n\n  /**\n   * Determines if the Hero can be moved forward\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveForward(pos) {\n    const ranges = [[1, 10], [21, 30], [41, 50], [61, 70], [81, 90]];\n    return this.isInAnyRange(pos, ranges);\n  }\n\n  /**\n   * Determines if the Hero can be moved backwards\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveBackwards(pos) {\n    const ranges = [[11, 20], [31, 40], [51, 60], [71, 80], [91, 100]];\n    return this.isInAnyRange(pos, ranges);\n  }\n\n  /**\n   * Checks if the Hero position is in any of the passed ranges\n   *\n   * @param {number} pos\n   * @param {array<[]>} ranges\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isInAnyRange(pos, ranges) {\n    const inR = range => inRange(pos, ...range);\n    return ranges.some(inR);\n  }\n\n  /**\n   * Checks if the Hero should move upwards\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  shouldMoveUp(pos) {\n    const corners = [10, 20, 30, 40, 50, 60, 70, 80, 90];\n    return corners.includes(pos);\n  }\n\n  /**\n   * Moves the Hero in the board after dice roll\n   *\n   * @param {object} state\n   * @param {object} prevState\n   * @memberof Hero\n   */\n  async setHeroPosition(state, prevState) {\n    const currentPosition = this.getHeroPosition(state);\n    const prevPosition = this.getHeroPosition(prevState);\n\n    if (currentPosition === prevPosition) return;\n\n    if (!this.isOnLadders(prevPosition) && !this.isOnSnakes(prevPosition)) {\n      await this.moveHero(prevPosition, currentPosition);\n      this.stopAnimations();\n      await sleep(100);\n    }\n\n    if (this.isOnLadders(currentPosition)) {\n      const start = currentPosition;\n      const end = this.config.laddersPositions[start];\n      await this.moveAsync({\n        x: this._gameObject.x + end.offsetX,\n        y: this._gameObject.y + end.offsetY\n      });\n\n      setPlayerProps(this.name, { position: end.position, reason: 'fromLadder' });\n    }\n\n    if (this.isOnSnakes(currentPosition)) {\n      const start = currentPosition;\n      const end = this.config.snakePositions[start];\n      await this.moveAsync({\n        x: this._gameObject.x + end.offsetX,\n        y: this._gameObject.y + end.offsetY\n      });\n\n      setPlayerProps(this.name, { position: end.position, reason: 'fromSname' });\n    }\n\n    if(currentPosition > 100) {\n      setPlayerProps(this.name, { position: 200 - currentPosition, reason: 'greater100' });\n    }\n  }\n\n  /**\n   * Check if the hero is on the root of a ladder\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isOnLadders(pos) {\n    const posis = [...Object.keys(this.config.laddersPositions)].map(p =>\n      parseInt(p)\n    );\n    return posis.includes(pos);\n  }\n\n  /**\n   * Check if the hero is on the head of a snake\n   *\n   * @param {number} pos\n   * @returns {boolean}\n   * @memberof Hero\n   */\n  isOnSnakes(pos) {\n    const posis = [...Object.keys(this.config.snakePositions)].map(p =>\n      parseInt(p)\n    );\n    return posis.includes(pos);\n  }\n\n  /**\n   * Move hero step by step\n   *\n   * @param {number} start\n   * @param {number} end\n   * @memberof Hero\n   */\n  async moveHero(start, end) {\n    end = end > 100 ? end + 1 : end;\n  \n    for (let i = start; i < end; i++) {\n      const current = i;\n      const move = i > 100 ? (200 - i) : i;\n\n      if (this.shouldMoveForward(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkForward`);\n        await this.moveForward();\n      } else if (this.shouldMoveUp(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkUp`);\n        await this.moveUp();\n      } else if (this.shouldMoveBackwards(move) && current <= 100) {\n        this._gameObject.anims.play(`${this.name}walkBackwards`);\n        await this.moveBackwards();\n      } else if(current > 100) {\n        this._gameObject.anims.play(`${this.name}walkForward`);\n        await this.moveForward();\n      }\n    }\n  }\n\n  /**\n   * Moves Hero backwards in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveBackwards(offsetX = 50) {\n    const newPosition = this._gameObject.x - offsetX;\n    return this.moveAsync({ x: newPosition });\n  }\n\n  /**\n   * Moves Hero Forward in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveForward(offsetX = 50) {\n    const newPosition = this._gameObject.x + offsetX;\n    return this.moveAsync({ x: newPosition });\n  }\n\n  /**\n   * Moves Hero up in the board\n   *\n   * @param {number} [offsetX=50]\n   * @returns {Promise}\n   * @memberof Hero\n   */\n  moveUp(offsetY = 50) {\n    const newPosition = this._gameObject.y - offsetY;\n    return this.moveAsync({ y: newPosition });\n  }\n}\n","import GameObject from \"./GameObject\";\nimport shuffle from \"lodash/shuffle\";\nimport { stopDice } from \"../store/actions\";\n\n\n/**\n * Dice\n *\n * @export\n * @class Dice\n * @extends {GameObject}\n */\nexport default class Dice extends GameObject {\n  constructor(scene, x, y, name, frameIndex){\n    super(scene, x, y, name, frameIndex);\n    this._gameObjectAnim = this._gameObject.anims.load(\"roll\");\n  }\n\n  /**\n   * Called whenever the store is upaded\n   *\n   * @param {object} { state, prevState }\n   * @returns\n   * @memberof Hero\n   */\n  stateDidUpdate({ state, prevState }) {\n    this.state = state;\n    if (state.diceState === \"rolling\") {\n      this.animate(state.dice);\n    }\n  }\n\n  /**\n   * Generate frames out of sprite sheet\n   *\n   * @returns {array<Frame>}\n   * @memberof Dice\n   */\n  getFrames() {\n    let frames = this.scene.anims.generateFrameNumbers(\"dice\");\n    frames = frames.filter(\n      fr => fr.frame > 15 && fr.frame < frames.length - 15\n    );\n    return shuffle(frames);\n  }\n\n  /**\n   * Creates the dice gameobject\n   *\n   * @param {number} [x=50]\n   * @param {number} [y=50]\n   * @returns\n   * @memberof Dice\n   */\n  create(x = 50, y = 50) {\n    this._gameObject = this.scene.add.sprite(x, y, \"dice\");\n  }\n\n  animate(diceNumber) {\n    const frames = this.getFrames();\n    let pausingFrame = this.config.pausingFrames[`${diceNumber}`];\n    pausingFrame = frames.find(fr => pausingFrame === fr.frame);\n\n    this.createAnimation({\n      key: \"roll\",\n      frames,\n      duration: 2000,\n    });\n  \n    this._gameObject.anims.play(\"roll\");\n    const currentFrame = pausingFrame.frame;\n\n    this.moveAsync({ x: Math.random() * 400 + 50, y: Math.random() * 400 + 50,\n      onComplete: () => {\n        this._gameObject.anims.stop();\n        this._gameObject.setFrame(currentFrame);\n        stopDice();\n      }\n    }, 1700);\n  }\n}\n","import phaser from 'phaser';\nimport config from '../config';\nimport Hero from '../gameObjects/Hero';\nimport Dice from '../gameObjects/Dice';\n\nexport default class InitScene extends phaser.Scene {\n    constructor () {\n        super({\n            key: 'initscene'\n        })\n    }\n\n    create () {\n      this.staticBg = this.add.image(config.boardWidth/2, config.boardHeight/2, 'board')\n      this.staticBg.scaleY = 0.5;\n      this.staticBg.scaleX = 0.5;\n\n      this.hero = new Hero(this, 60, config.boardHeight - 75, 'player1', 0);\n      this.hero2 = new Hero(this, 50, config.boardHeight - 75, 'player2', 0);\n      this.dice = new Dice(this, 100, 100, 'dice', 0);\n    }\n}\n","import phaser from 'phaser';\nimport PreloadScene from '../scenes/PreloadScene';\nimport InitScene from '../scenes/InitScene';\nimport config from '../config';\n\nconst defaultConfig = {\n    width: config.boardWidth,\n    height: config.boardHeight,\n    scene: [\n      PreloadScene,\n      InitScene,\n    ]\n};\n\n/**\n * Create the game\n *\n * @export\n * @param {DOM.Element} parent\n * @returns {Phaser.Game}\n */\nexport function createGame(parent){\n  const config = {\n    ...defaultConfig,\n    parent,\n  }\n  return new phaser.Game(config);\n};\n","import React, { Component, Fragment } from \"react\";\nimport { setDice, resetGame } from \"../../store/actions\";\nimport { state } from \"../../store\";\nimport \"./PlayingBar.css\";\n\nwindow.__setDice = setDice;\n\nclass PlayingBar extends Component {\n  state = {\n    playingPlayer: \"player1\",\n    dice: -1,\n    diceState: \"stop\",\n    isOn100: undefined\n  };\n\n  componentDidMount() {\n    state.subscribe({\n      next: ({ state }) => {\n        this.setState({\n          playingPlayer: state.playingPlayer,\n          dice: state.dice,\n          diceState: state.diceState,\n          isOn100: state.isOn100,\n        });\n      }\n    });\n  }\n\n  getPlayerName() {\n    return this.state.playingPlayer.includes(\"1\") ? \"You\" : \"Computer\";\n  }\n\n  render() {\n    const player = this.getPlayerName();\n    const { diceState, playingPlayer, isOn100 } = this.state;\n\n    return (\n      <div className=\"playing-bar\">\n        <div className=\"labels-container\">\n          {isOn100 ? (\n            <span className='winner'>{`Winner: ${isOn100}`}</span>\n          ) : (\n            <Fragment>\n              <label>\n                <strong>Playing next: </strong>\n                <span className={player.toLowerCase()}>{player}</span>\n              </label>\n              <label>\n                <strong>Last Dice: </strong>\n                {this.state.dice > 0 ? this.state.dice : \"-\"}\n              </label>\n            </Fragment>\n          )}\n        </div>\n        <div className=\"button-container\">\n          <button\n            disabled={\n              (diceState === \"rolling\" || playingPlayer === \"player2\")\n              && !isOn100\n            }\n            onClick={() => isOn100 ? resetGame() : setDice()}\n          >\n            { isOn100 ? 'Start new game' :  'Roll the dice' }\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlayingBar;\n","import React, { Component } from \"react\";\nimport { state } from \"../../store\";\nimport classNames from \"classnames\";\nimport \"./Info.css\";\n\nexport default class Info extends Component {\n  state = {\n    position: 1,\n    rolls: 0,\n    playingPlayer: \"player1\"\n  };\n\n  componentDidMount() {\n    state.subscribe({\n      next: ({ state }) => {\n        this.setState({\n          ...state.players[this.props.player],\n          playingPlayer: state.playingPlayer\n        });\n      }\n    });\n  }\n\n  getPlayerName(){\n    return this.props.player === 'player1' ? 'You' : 'Computer'\n  }\n\n  render() {\n    const playerContainer = classNames(\"player-info-container\", {\n      \"playing-player\": this.state.playingPlayer === this.props.player,\n      \"player1\": this.props.player === 'player1',\n      \"player2\": this.props.player === 'player2',\n    });\n\n    return (\n      <div className=\"player-info\">\n        <div className={playerContainer}>\n          <h3>{this.getPlayerName()}</h3>\n          <h5>Position: {this.state.position}</h5>\n          <h5>Rolls: {this.state.rolls}</h5>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Rules.css\";\n\n/**\n * Display the rules of the game\n * // just a link for now\n *\n * @export\n * @class Rules\n * @extends {Component}\n */\nexport default class Rules extends Component {\n  render() {\n    return (\n      <span className=\"rules\">\n        <a\n          href=\"https://en.wikipedia.org/wiki/Snakes_and_Ladders\"\n          target=\"_blank\"\n        >\n          History & Rules\n        </a>\n      </span>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './PersonalInfo.css';\n\nexport default class PersonalInfo extends Component {\n  render() {\n    return (\n      <div className='personal-info'>\n        <a href=\"https://www.linkedin.com/in/avrmav/\">Avraam Mavridis</a>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { createGame } from \"./game\";\nimport PlayingBar from \"./components/PlayingBar/PlayingBar\";\nimport Info from \"./components/Info/Info\";\nimport Rules from \"./components/Rules/Rules\";\nimport PersonalInfo from \"./components/PersonalInfo/PersonalInfo\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  componentDidMount() {\n    createGame(this.el);\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"container\">\n          <div>\n            <Rules />\n            <Info player=\"player1\" />\n          </div>\n          <div className=\"game-wrapper\">\n            <h2>Snakes and Ladders</h2>\n            <div ref={el => (this.el = el)} />\n            <PlayingBar />\n          </div>\n          <div>\n            <Info player=\"player2\" />\n            <PersonalInfo />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/board.9485ed2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dice.6dd8eb80.png\";","module.exports = __webpack_public_path__ + \"static/media/hero.e5eac10f.png\";","module.exports = __webpack_public_path__ + \"static/media/hero2.3c1ec8d0.png\";"],"sourceRoot":""}